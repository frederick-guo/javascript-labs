Lab-29:

console.log("\nAverage Numbers\n");

function findAverage (array){
    let sum = 0;
    let count = 0;
    for(let i = 0; i < array.length; i++){
        sum += array[i];
        count++;
    }
    return sum / count;
}

let one = [12,3,6,8,14,12,1]
let two = [1,2,8,4,9,6,6,8,2]

let averageOne = findAverage(one)

console.log(`The average of numbers in list one is ${averageOne}\n`);

let averageTwo = findAverage(two)

console.log(`The average of numbers in list two is ${averageTwo}\n`);


Lab-30:

console.log("\nFibonacci Numbers\n");
const readline = require('readline-sync');




function findFibonacciNumbers(num){
    let list = [1,1]

    for(let i = 2; i < num; i++){
        let nextNum = list[i-2] + list[i-1]
        list.push(nextNum)
    }
    return list;
}

function printFiboList (list){    
    console.log(list.join(' '));
}

while (true){
    let num = Number(readline.question("How many fibonacci numbers do you want to see? "));

    if(num === 0){
        break;
    }
    
    let fiboList = findFibonacciNumbers(num);
    printFiboList(fiboList);
}

console.log('\nGoodbye\n');


Lab-31:

console.log("\nStrictly Increasing\n");

function isStrictlyIncreasing (array){
    let increasing = true;

    for(let i = 0; i < array.length - 1; i++){
        if(!(array[i+1] > array[i])){
            increasing = false;
        }
    }
    return increasing;
}

let one = [1,3,6,8,14,16,18];
let two = [1,2,8,4,9,6,6,8,2];

if (isStrictlyIncreasing(one)){
    console.log('Array One is strictly increasing.\n');
}
else{
    console.log('Array One is NOT strictly increasing.\n');
}

if (isStrictlyIncreasing(two)){
    console.log('Array Two is strictly increasing.\n');
}
else{
    console.log('Array Two is NOT strictly increasing.\n');
}


Lab-32:

console.log("\nTrim Noise\n");
const readline = require('readline-sync');




function trimNoise(samples, amplitude){
    for(let i = 0; i < samples.length; i++){
        if(samples[i] > amplitude){
            samples[i] = amplitude;
        }
        if(samples[i] < (-1) * amplitude){
            samples[i] = (-1) * amplitude;
        }
    }
    return samples;
}

function printMusic (samples){    
    console.log(samples.join(' '));
}

let samples = [40,2532,17,-2300,-17,-4000,2000,1048,-420,33,15,-32,2030,3223]

console.log(`The original list of numbers are: ${printMusic(samples)}\n`)

samples = trimNoise(samples,2000)

console.log(`The trimmed list of numbers are: ${printMusic(samples)}\n`)


Lab-33:

console.log("\nList\n");
const readline = require('readline-sync');

function printNamesAndAges(names, ages){
    for(let i = 0; i < names.length; i++){
        console.log(`${names[i]} ${ages[i]}`)
    }
}

let names = []
let ages = []

while(true){
    let name = readline.question("Enter a Name: ")
    if(name === ""){
        break;
    }

    let age = readline.question("Enter their Age: ")
    if(age === ""){
        break;
    }

    names.push(name)
    ages.push(age)
    console.log("\n")
}

console.log("\n")

printNamesAndAges(names, ages);

console.log("\n")

names.sort(); //ages are not sorted, so when printing the sorted list, the names and ages are not corectly paired!!
              //I assume this is problem...

printNamesAndAges(names, ages); 


Lab-34:

const readline = require('readline-sync');

function printItemsAndCosts(items, costs){
    for(let i = 0; i < items.length; i++){
        console.log(`${items[i]} ${costs[i]}`)
    }
}

function getTotalCost(costs){
    let sum = 0
    for(let i = 0; i < costs.length; i++){
        sum += costs[i]
    }
    return sum;
}

function printTotalCost(costs){
    let totalCost = getTotalCost(costs)

    console.log(`\nTotal Cost: $${totalCost}\n`)
}

let items = []
let costs = []
console.log('\n')

while (true){
    let item = readline.question("Enter an item name: ")
    if(item === ''){
        break;
    }

    let itemCost = Number(readline.question("Enter the cost of the item: "))
    if(itemCost === ''){
        break;
    }

    console.log('\n')
    items.push(item)
    costs.push(itemCost)
}

printItemsAndCosts(items,costs);

printTotalCost(costs);
